<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>11</ID>
      <Description>"riseFromGrave()"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fstp dword ptr [ebx+2C]

fld dword ptr [ebx+2C]
fistp dword ptr [ebx+08]


cmp [ebx+24],11
je diggerScenario
cmp [ebx+24],17
je diggerScenario
cmp [ebx+24],10
je balloon


pushad


push [ebx+1C]
mov ebx,ebx


mov edi,[ebx+0C]
mov eax,[ebx+08]
mov ecx,[6a9ec0]
mov ecx,[ecx+768]
call 41C4C0
add eax,1

call 531C90
popad
jmp originalcode






diggerScenario:
mov [ebx+2C],(float)900
jmp originalcode


balloon:

mov [ebx+84],(float)1000




originalcode:

pop ebx
ret 0008

exit:
jmp returnhere


42A206:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
42A206:
db D9 5B 2C 5B C2 08 00
//fstp dword ptr [ebx+2C]
//pop ebx
//ret 0008
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"digger speed"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp edx,#32
jne originalcode
pushad
mov eax,[6a9ec0]
call 004537D0
cmp al,1
popad
jne originalcode

fld dword ptr [fl]
jmp 00524A82



originalcode:
cmp edx,3B
jne 00524A8D

exit:
jmp returnhere

fl:
dd (float)1

524A77:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
524A77:
db 83 FA 3B 75 11
//cmp edx,3B
//jne 00524A8D
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"special cases of rising"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+24],15
jne next
mov [esi+28],#76
jmp end

next:
cmp [esi+24],03
jne next1
mov [esi+28],#11

pushad
push (float)24
push 0
push 0
push str1
mov edi,esi
call 528B00
popad
jmp end

next1:
cmp [esi+24],8
jne originalcode
mov [esi+28],#40
mov [esi+68],#300
pushad
push (float)24
push 0
push 0
push str2
mov edi,esi
call 528B00
popad
jmp end


originalcode:
mov [esi+28],edi
end:
call 0052F9C0

exit:
jmp returnhere

str1:
db 'anim_run' 00

str2:
db 'anim_moonwalk' 00

528F17:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
528F17:
db 89 7E 28 E8 A1 6A 00 00
//mov [esi+28],edi
//call 0052F9C0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"balloon fall"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
mov eax,[6a9ec0]
call 004537D0
cmp al,1
popad
jne originalcode
cmp [edi+84],(float)35
jle originalcode
fld dword ptr [edi+00000084]
fsub qword ptr [fl]
fstp dword ptr [edi+84]


originalcode:
cmp dword ptr [eax+000007F8],2C

exit:
jmp returnhere

fl:
dq (double)10

525BE5:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
525BE5:
db 83 B8 F8 07 00 00 2C
//cmp dword ptr [eax+000007F8],2C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"shadow shi"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp esi,10
jne originalcode
pushad
mov eax,[6a9ec0]
call 004537D0
cmp al,1
popad
jne originalcode
fld dword ptr [esp+34]
fsub qword ptr [006794C0]
fstp dword ptr [esp+34]
fld dword ptr [edi+00000084]
call 006397D0
sub eax,#1500//000007D0
jmp 0053448C

originalcode:
cmp esi,14
jne 005344E6

exit:
jmp returnhere

534469:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
534469:
db 83 FE 14 75 78
//cmp esi,14
//jne 005344E6
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"shadow skip"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi+28],49
jne originalcode
pushad
mov eax,[6a9ec0]
call 004537D0
cmp al,1
popad
je 00534469



originalcode:
cmp esi,10
jne 00534469

exit:
jmp returnhere

534454:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
534454:
db 83 FE 10 75 10
//cmp esi,10
//jne 00534469
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Auto Assemble script"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#14
je 0052CF5F

originalcode:
cmp eax,28
je 0052CF5F

exit:
jmp returnhere

52CE0E:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
52CE0E:
db 83 F8 28 0F 84 48 01 00 00
//cmp eax,28
//je 0052CF5F
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"skibid"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

cmp [ebx+58],6
jg originalcode


cmp byte ptr [ebx+50],1
je originalcode


push eax
mov eax,[6a9ec0]
mov eax,[eax+320]
cmp [eax+E8],1
pop eax

jne next


pushad

mov ecx,[6a9ec0]
mov ecx,[ecx+320]
mov ecx,[ecx+E4]


fld [ebx+28]
call 6397D0

sub ecx,eax




cmp ecx,0
jl poopad
cmp ecx,#70
jg poopad

mov ecx,[6a9ec0]
mov ecx,[ecx+320]
mov ecx,[ecx+E0]


fld [ebx+24]
call 6397D0

sub ecx,eax




cmp ecx,#100
jl poopad
cmp ecx,#170
jg poopad


pushad
mov ecx,ebx
call 432060
popad

pushad
mov edx,ebx
call 432B00
popad








poopad:
popad
jmp originalcode


next:
push eax
mov eax,[6a9ec0]
mov eax,[eax+320]
cmp [eax+E8],2
pop eax
jne originalcode
pushad
mov ecx,ebx
call 432060
popad

pushad
mov edx,ebx
call 432B00
popad
/*push eax
mov eax,[6a9ec0]
mov eax,[eax+320]
mov eax,[eax+E4]
mov [006FFF38],eax
pop eax
push eax
mov eax,[6a9ec0]
mov eax,[eax+320]
mov eax,[eax+E0]
mov [006FFF48],eax
pop eax

push eax
fild dword ptr [006FFF48]
fld dword ptr [ebx+28]
fcompp
fstsw ax
sahf
pop eax
jg up
jl down
down:
fld dword ptr [ebx+28]
fadd qword ptr [fl]
fstp dword ptr [ebx+28]
up:
fld dword ptr [ebx+28]
fsub qword ptr [fl]
fstp dword ptr [ebx+28]*/




//pushad
//mov ecx,ebx
//call 430E40
//popad






originalcode:
add dword ptr [ebx+4C],01
mov edx,[ebx]

exit:
jmp returnhere

fl:
dq (double)1

431506:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
431506:
add dword ptr [ebx+4C],01
mov edx,[ebx]
//Alt: db 83 43 4C 01 8B 13
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"1068"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>00419F49</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"-100"</Description>
      <ShowAsSigned>1</ShowAsSigned>
      <VariableType>Byte</VariableType>
      <Address>00419F50</Address>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [esi+08],eax</Description>
      <AddressString>PlantsVsZombies.exe+6DD16</AddressString>
      <Before>
        <Byte>46</Byte>
        <Byte>38</Byte>
        <Byte>D8</Byte>
        <Byte>46</Byte>
        <Byte>34</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>B2</Byte>
        <Byte>BA</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [esi+0C],eax</Description>
      <AddressString>PlantsVsZombies.exe+6DD1E</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>B2</Byte>
        <Byte>BA</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
