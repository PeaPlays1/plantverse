<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"256"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048A34D</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"412"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048A348</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"612"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048A4A4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"412"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048A49F</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"382"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048A1BB</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"522"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048A1B6</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"EB"</Description>
      <ShowAsHex>1</ShowAsHex>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Byte</VariableType>
      <Address>0048B5DA</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"EB"</Description>
      <ShowAsHex>1</ShowAsHex>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Byte</VariableType>
      <Address>0048B5E4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"E9 C3 00 00 00 90 8B 8E A8 01"</Description>
      <ShowAsHex>1</ShowAsHex>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Array of byte</VariableType>
      <ByteLength>10</ByteLength>
      <Address>0048B5EE</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"138"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048B67D</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"196"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048B682</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"138"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048B6A3</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"266"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>0048B6A9</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Auto Assemble script"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

007952C6: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ebx,[700264]//[006A7560]

exit:
jmp returnhere

48B69B:
jmp 007952C6
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
48B69B:
mov ebx,[006A7560]
//Alt: db 8B 1D 60 75 6A 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"replacing"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

007952D2: //this is allocated memory, you have read,write,execute access
//place your code here

push eax
mov eax,[6a9ec0]
mov eax,[eax+82c]
mov eax,[eax+24]

cmp eax,#11
jl next
cmp eax,#20
jle yes
cmp eax,#31
jl next
cmp eax,#40
jle yes
cmp eax,#50
je yes
next:
pop eax
jmp originalcode

yes:
pop eax
mov ebx,[006A77FC]
jmp exit






originalcode:
mov ebx,[006A763C]

exit:
jmp returnhere

48B586:
jmp 007952D2
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
48B586:
mov ebx,[006A763C]
//Alt: db 8B 1D 3C 76 6A 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [esi+08],eax</Description>
      <AddressString>PlantsVsZombies.exe+6DD16</AddressString>
      <Before>
        <Byte>46</Byte>
        <Byte>38</Byte>
        <Byte>D8</Byte>
        <Byte>46</Byte>
        <Byte>34</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>B2</Byte>
        <Byte>BA</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [esi+0C],eax</Description>
      <AddressString>PlantsVsZombies.exe+6DD1E</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>B2</Byte>
        <Byte>BA</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Comments>Info about this table:
</Comments>
</CheatTable>
