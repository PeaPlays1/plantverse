<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>12</ID>
      <Description>"scriptos"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"panning back"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

007947D5: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push #-100
push ebx
call 00511C40

exit:
jmp returnhere

43BA61:
jmp 007947D5
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
43BA61:
db 6A 00 53 E8 D7 61 0D 00
//push 00
//push ebx
//call 00511C40
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"fix cursor prev"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

007947E3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
sub ecx,#128//19
mov [esi+08],ecx

exit:
jmp returnhere

4387FF:
jmp 007947E3
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
4387FF:
db 83 E9 19 89 4E 08
//sub ecx,19
//mov [esi+08],ecx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"fix object highlight"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

007947F2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ebx,[eax+000000E0]
sub ebx,#100


exit:
jmp returnhere

438DDA:
jmp 007947F2
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
438DDA:
db 8B 98 E0 00 00 00
//mov ebx,[eax+000000E0]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"fix shake"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

00794801: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//add ebx,#110
push #105
xor ecx,ecx
mov ecx,4
mov [006FFFA8],ecx
//push ebx
push #100
mov eax,esi

exit:
jmp returnhere

415F13:
jmp 00794801
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
415F13:
db 50 33 C9 53 8B C6
//push eax
//xor ecx,ecx
//push ebx
//mov eax,esi
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"fix shake finish"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

0079481A: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [ebp+30],#100//ebx
mov [ebp+34],ebx

exit:
jmp returnhere

415EE1:
jmp 0079481A
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
415EE1:
db 89 5D 30 89 5D 34
//mov [ebp+30],ebx
//mov [ebp+34],ebx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"riseFromGrave()"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

0079482A: //this is allocated memory, you have read,write,execute access
//place your code here
fstp dword ptr [ebx+2C]

fld dword ptr [ebx+2C]
fistp dword ptr [ebx+08]


pushad







push [ebx+1C]
mov ebx,ebx


mov edi,[ebx+0C]
mov eax,[ebx+08]
mov ecx,[6a9ec0]
mov ecx,[ecx+768]
call 41C4C0
add eax,1

call 531C90

popad

originalcode:

pop ebx
ret 0008

exit:
jmp returnhere


42A206:
jmp 0079482A
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
42A206:
db D9 5B 2C 5B C2 08 00
//fstp dword ptr [ebx+2C]
//pop ebx
//ret 0008
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [esi+08],eax</Description>
      <AddressString>PlantsVsZombies.exe+6DD16</AddressString>
      <Before>
        <Byte>46</Byte>
        <Byte>38</Byte>
        <Byte>D8</Byte>
        <Byte>46</Byte>
        <Byte>34</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>B2</Byte>
        <Byte>BA</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [esi+0C],eax</Description>
      <AddressString>PlantsVsZombies.exe+6DD1E</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>B2</Byte>
        <Byte>BA</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
